
#include <iostream>
#include <vector>
#include <map>
using namespace std;

void wypisz(int w)
{
    cout << w << "\n";
}
void wypisz(vector<int>tab)
{
    for (int i = 0; i < tab.size(); i++)
    {
       cout << tab[i] << " ";
    }
   cout << "\n";
}
void wypisz(map<int, int>m)
{
    for (auto item : m)
    {
        cout << item.first <<" ";
        cout << item.second <<" razy\n";
    }
}

bool czynalezy(vector<int>tab, int element)
{
    for (int i = 0; i < tab.size(); i++)
    {
        if (tab[i] == element)
        {
            return true;
        }
    }
    return false;
}

bool czyzawiera(vector<int>tab, std::vector<int>pod)
{
    for (int i = 0; i<pod.size(); i++)
    {
        if (!czynalezy(tab,pod[i]))
        {
            return false;
        }
    }
    return true;
}

int min(vector<int>tab)
{
    int a;
    a = tab[0];
    for (int i = 0; i < tab.size(); i++)
    {
        if (tab[a] < a)
        {
            a = tab[i];
        }
    }
    return a;
}

vector<int>unikalny(vector<int>tab)
{
    vector<int>wynik;
    for (int i = 0; i < tab.size(); i++)
    {
        if (!czynalezy(wynik, tab[i]))
        {
            wynik.push_back(tab[i]);
        }
    }
    return wynik;
}

bool czynalezyklucz(map<int, int> m, int klucz)
{
    for (auto item : m)
    {
        if (item.first == klucz)
        {
            return true;
        }
    }
    return false;
}


map<int, int>czestosc(vector<int>tab)
{
    map<int, int>wynik;
    for (int i = 0; i < tab.size(); i++)
    {
        if (!czynalezyklucz(wynik, tab[i]))
        {
             wynik.insert({ tab[i],1 });
        }
        else
        {
            wynik[tab[i]]++;
        }
    }
    return wynik;
}

int main()
{

    map<int, int>m;

    m.insert({ 8,5 });
    m.insert({ 2,6 });
    m.insert({ -3,8 });

    vector<int>tab{ 1,3,6,1,3,6 };
    vector<int>tab2{ 2,7 };
    wypisz(min(tab2));
    wypisz(unikalny(tab));
    wypisz(czestosc(tab));
    if(czynalezyklucz(m, -3))
    {
        cout << "nalezy klucz\n";
    }
    else
    {
       cout << "nie nalezy klucz\n";
    }
    
    if (czynalezy(tab, 3))
    {
        cout << "nalezy\n";
    }
    else
    {
       cout << "nie nalezy\n";
    }
    if (czyzawiera(tab,tab2))
    {
        cout << "zawiera\n";
    }
    else
    {
        cout << "nie zawiera\n";
    }
    
}

